<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML><HEAD>
<TITLE>74182 variations</TITLE>
</HEAD>

<BODY>
<P><CENTER><H2>74182 variations</H2></CENTER>
<HR>

<P>Of course, the schematic of the 74182 innards<BR>
isn't very obvious to read.

<P>I guess, it's because them engineers who designed<BR>
this IC were forced to use AND NOR combination gates.

<P>If we take the Cn+x circuitry, and draw it a little<BR>
bit different, the end result looks like something we<BR>
already have seen inside the 74381/74382 carry chain.

<P><I>Note: for the first step:<BR>
if you take an AND gate, and invert the inputs<BR>
and the output, the result behaves like an OR gate.</I>

<P><IMG SRC="a7_182_c1.png">

<HR>

<P>In the pictures above, the 74182 has high_active<BR>
Cn, Cn+4 signals, and low_active /P, /G signals.

<P>Funny thing is, that the 74182 also works when reversing<BR>
the polarity of all the input/output signals, what means<BR>
using low_active /Cn, /Cn+4 carry signals,<BR>
and high_active P, G signals.

<P><I>Source:<BR>
Bipolar Microprocessor logic and Interface,<BR>
AMD, 1985: Page 5-19, AM2902 datasheet.</I>

<HR>

<P>The 74182 was intended to link four Bit 74181 ALU ICs together.<BR>
But building one Bit adders and linking them together<BR>
with a 74182 also works. 

<P><IMG SRC="a7_182_add.png">

<P>When digging into 74LS/74F datasheets, you may find<BR>
two different implementations of a binary full adder<BR>
<I>(Yep, that's what got me confused in ALU design, Part 1)</I><BR>
but for the 74182, it won't matter if the propagate signal<BR>
P is generated by an XOR gate, or by an OR gate.

<P>Be warned, that 74182 has no Cn+4 output pin.<BR>
So you may want to improvise something...

<P><IMG SRC="a7_182_cy.png">

<HR>

<P>The 74282 basically contained the 74182 circuitry,<BR>
plus a 4:1 multiplexer which made it possible to choose<BR>
between two different carry input signals...<BR>
in inverted or non_inverted form.

<P><IMG SRC="a7_282.png">

<P>A typical application would be feeding CnA from the<BR>
Carry flag in the status register, and connecting CnB<BR>
to GND (since you may want to set the ALU carry input<BR>
to 1 when it performs an increment, or to 0 when the<BR>
ALU does a "shift left").

<HR>

<P>Since we are at it: another concept would be a carry skip adder,<BR>
but we already had this concept in "ALU design, Part 1" when<BR>
toying with EPROMS. So no need to go into details here.

<P><IMG SRC="a7_csa.png">

<P>And yes, you could use the 74182 in carry skip adders, too.

<HR>

<P>If you still happen to have too much spare time on your hands,<BR>
you also could dig into the datasheet of the oscure/obsolete Signetics 8261.

<HR>
<P>
<A HREF="../index.htm">[HOME]</A>
<A HREF="a7_0.htm">[UP]</A>/
<A HREF="a7_3.htm">[BACK]</A>
<A HREF="a7_1.htm">[1]</A>
<A HREF="a7_2.htm">[2]</A>
<A HREF="a7_3.htm">[3]</A>
[4]
<A HREF="a7_5.htm">[5]</A>
<A HREF="a7_6.htm">[6]</A>
<A HREF="a7_7.htm">[7]</A>
<A HREF="a7_8.htm">[8]</A>

<A HREF="a7_5.htm">[NEXT]</A>


<P>(c) Dieter Mueller 2012
</BODY>
</HTML>

